(displayln (compare-expr 12 12))
(displayln (compare-expr 12 20))
(displayln (compare-expr #t #t))
(displayln (compare-expr #f #f))
(displayln (compare-expr #t #f))
(displayln (compare-expr #f #t))
(displayln (compare-expr 'a '(cons a b)))
(displayln (compare-expr '(cons a b) '(cons a b)))
(displayln (compare-expr '(cons a b) '(cons a c)))
(displayln (compare-expr '(cons (cons a b) (cons b c))
			 '(cons (cons a c) (cons a c))))
(displayln (compare-expr '(cons a b) '(list a b)))
(displayln (compare-expr '(list) '(list a)))
(displayln (compare-expr ''(a b) ''(a c)))
(displayln (compare-expr '(quote (a b)) '(quote (a c))))
(displayln (compare-expr '(quoth (a b)) '(quoth (a c))))
(displayln (compare-expr '(if x y z) '(if x z z)))
(displayln (compare-expr '(if x y z) '(g x y z)))
(displayln (compare-expr '(let ((a 1)) (f a)) '(let ((a 2)) (g a))))
(displayln (compare-expr '(+ #f (let ((a 1) (b 2)) (f a b)))
			 '(+ #t (let ((a 1) (c 2)) (f a c)))))
(displayln (compare-expr '((lambda (a) (f a)) 1) '((lambda (a) (g a)) 2)))
(displayln (compare-expr '((lambda (a b) (f a b)) 1 2)
			 '((lambda (a b) (f b a)) 1 2)))
(displayln (compare-expr '((lambda (a b) (f a b)) 1 2)
			 '((lambda (a c) (f c a)) 1 2)))
